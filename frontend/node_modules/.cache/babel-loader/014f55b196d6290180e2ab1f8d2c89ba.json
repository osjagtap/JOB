{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lalit/Documents/Web Development/JOB/frontend/src/component/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { Grid, TextField, Button, Typography, makeStyles, Paper } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    padding: \"60px 60px\"\n  },\n  inputBox: {\n    width: \"300px\"\n  },\n  submitButton: {\n    width: \"300px\"\n  }\n}));\n\nconst Login = props => {\n  _s();\n\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [loggedin, setLoggedin] = useState(isAuth());\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\"\n    },\n    password: {\n      error: false,\n      message: \"\"\n    }\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({ ...loginDetails,\n      [key]: value\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({ ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message\n      }\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some(obj => {\n      return inputErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios.post(apiList.login, loginDetails).then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"type\", response.data.type);\n        setLoggedin(isAuth());\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Logged in successfully\"\n        });\n        console.log(response);\n      }).catch(err => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message\n        });\n        console.log(err.response);\n      });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\"\n      });\n    }\n  };\n\n  return loggedin ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.body,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 4,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(EmailInput, {\n          label: \"Email\",\n          value: loginDetails.email,\n          onChange: event => handleInput(\"email\", event.target.value),\n          inputErrorHandler: inputErrorHandler,\n          handleInputError: handleInputError,\n          className: classes.inputBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(PasswordInput, {\n          label: \"Password\",\n          value: loginDetails.password,\n          onChange: event => handleInput(\"password\", event.target.value),\n          className: classes.inputBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleLogin(),\n          className: classes.submitButton,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"4tAw5pY+2w7itGTQ3w6rBMOKq10=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lalit/Documents/Web Development/JOB/frontend/src/component/Login.js"],"names":["useContext","useState","Grid","TextField","Button","Typography","makeStyles","Paper","axios","Redirect","PasswordInput","EmailInput","SetPopupContext","apiList","isAuth","useStyles","theme","body","padding","inputBox","width","submitButton","Login","props","classes","setPopup","loggedin","setLoggedin","loginDetails","setLoginDetails","email","password","inputErrorHandler","setInputErrorHandler","error","message","handleInput","key","value","handleInputError","status","handleLogin","verified","Object","keys","some","obj","post","login","then","response","localStorage","setItem","data","token","type","open","severity","console","log","catch","err","event","target"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tTypography,\n\tmakeStyles,\n\tPaper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n\tbody: {\n\t\tpadding: \"60px 60px\",\n\t},\n\tinputBox: {\n\t\twidth: \"300px\",\n\t},\n\tsubmitButton: {\n\t\twidth: \"300px\",\n\t},\n}));\n\nconst Login = (props) => {\n\tconst classes = useStyles();\n\tconst setPopup = useContext(SetPopupContext);\n\n\tconst [loggedin, setLoggedin] = useState(isAuth());\n\n\tconst [loginDetails, setLoginDetails] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst [inputErrorHandler, setInputErrorHandler] = useState({\n\t\temail: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t},\n\t\tpassword: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t},\n\t});\n\n\tconst handleInput = (key, value) => {\n\t\tsetLoginDetails({\n\t\t\t...loginDetails,\n\t\t\t[key]: value,\n\t\t});\n\t};\n\n\tconst handleInputError = (key, status, message) => {\n\t\tsetInputErrorHandler({\n\t\t\t...inputErrorHandler,\n\t\t\t[key]: {\n\t\t\t\terror: status,\n\t\t\t\tmessage: message,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleLogin = () => {\n\t\tconst verified = !Object.keys(inputErrorHandler).some((obj) => {\n\t\t\treturn inputErrorHandler[obj].error;\n\t\t});\n\t\tif (verified) {\n\t\t\taxios\n\t\t\t\t.post(apiList.login, loginDetails)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlocalStorage.setItem(\"token\", response.data.token);\n\t\t\t\t\tlocalStorage.setItem(\"type\", response.data.type);\n\t\t\t\t\tsetLoggedin(isAuth());\n\t\t\t\t\tsetPopup({\n\t\t\t\t\t\topen: true,\n\t\t\t\t\t\tseverity: \"success\",\n\t\t\t\t\t\tmessage: \"Logged in successfully\",\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tsetPopup({\n\t\t\t\t\t\topen: true,\n\t\t\t\t\t\tseverity: \"error\",\n\t\t\t\t\t\tmessage: err.response.data.message,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(err.response);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetPopup({\n\t\t\t\topen: true,\n\t\t\t\tseverity: \"error\",\n\t\t\t\tmessage: \"Incorrect Input\",\n\t\t\t});\n\t\t}\n\t};\n\n\treturn loggedin ? (\n\t\t<Redirect to=\"/home\" />\n\t) : (\n\t\t<Paper elevation={3} className={classes.body}>\n\t\t\t<Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography variant=\"h3\" component=\"h2\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<EmailInput\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tvalue={loginDetails.email}\n\t\t\t\t\t\tonChange={(event) => handleInput(\"email\", event.target.value)}\n\t\t\t\t\t\tinputErrorHandler={inputErrorHandler}\n\t\t\t\t\t\thandleInputError={handleInputError}\n\t\t\t\t\t\tclassName={classes.inputBox}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tvalue={loginDetails.password}\n\t\t\t\t\t\tonChange={(event) => handleInput(\"password\", event.target.value)}\n\t\t\t\t\t\tclassName={classes.inputBox}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={() => handleLogin()}\n\t\t\t\t\t\tclassName={classes.submitButton}\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}